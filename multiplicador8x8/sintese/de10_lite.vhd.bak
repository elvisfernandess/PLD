-------------------------------------------------------------------
-- Name        : de0_lite.vhd
-- Author      : 
-- Version     : 0.1
-- Copyright   : Departamento de Eletrônica, Florianópolis, IFSC
-- Description : Projeto base DE10-Lite
-------------------------------------------------------------------
LIBRARY ieee;
USE IEEE.STD_LOGIC_1164.ALL;
use ieee.numeric_std.all;

entity de10_lite is
    port(
        ---------- CLOCK ----------
        ADC_CLK_10      : in    std_logic;
        MAX10_CLK1_50   : in    std_logic;
        MAX10_CLK2_50   : in    std_logic;
        ----------- SDRAM ------------
        DRAM_ADDR       : out   std_logic_vector(12 downto 0);
        DRAM_BA         : out   std_logic_vector(1 downto 0);
        DRAM_CAS_N      : out   std_logic;
        DRAM_CKE        : out   std_logic;
        DRAM_CLK        : out   std_logic;
        DRAM_CS_N       : out   std_logic;
        DRAM_DQ         : inout std_logic_vector(15 downto 0);
        DRAM_LDQM       : out   std_logic;
        DRAM_RAS_N      : out   std_logic;
        DRAM_UDQM       : out   std_logic;
        DRAM_WE_N       : out   std_logic;
        ----------- SEG7 ------------
        HEX0            : out   std_logic_vector(7 downto 0);
        HEX1            : out   std_logic_vector(7 downto 0);
        HEX2            : out   std_logic_vector(7 downto 0);
        HEX3            : out   std_logic_vector(7 downto 0);
        HEX4            : out   std_logic_vector(7 downto 0);
        HEX5            : out   std_logic_vector(7 downto 0);
        ----------- KEY ------------
        KEY             : in    std_logic_vector(1 downto 0);
        ----------- LED ------------
        LEDR            : out   std_logic_vector(9 downto 0);
        ----------- SW ------------
        SW              : in    std_logic_vector(9 downto 0);
        ----------- VGA ------------
        VGA_B           : out   std_logic_vector(3 downto 0);
        VGA_G           : out   std_logic_vector(3 downto 0);
        VGA_HS          : out   std_logic;
        VGA_R           : out   std_logic_vector(3 downto 0);
        VGA_VS          : out   std_logic;
        ----------- Accelerometer ------------
        GSENSOR_CS_N    : out   std_logic;
        GSENSOR_INT     : in    std_logic_vector(2 downto 1);
        GSENSOR_SCLK    : out   std_logic;
        GSENSOR_SDI     : inout std_logic;
        GSENSOR_SDO     : inout std_logic;
        ----------- Arduino ------------
        ARDUINO_IO      : inout std_logic_vector(15 downto 0);
        ARDUINO_RESET_N : inout std_logic
    );
end entity;

architecture rtl of de10_lite is

    signal shift_out       : unsigned(15 downto 0); -- Sinal de saída do deslocador.
    signal product8x8      : unsigned(15 downto 0); -- Sinal de saída do multiplicador 8x8.
    signal sum             : unsigned(15 downto 0); -- Sinal de saída da soma.
    signal input           : unsigned(7 downto 0);
    signal shift           : std_logic_vector(1 downto 0);
    signal aclr_n          : std_logic;
    signal count           : unsigned(1 downto 0);
    signal aout            : unsigned(3 downto 0);
    signal bout            : unsigned(3 downto 0);
    signal product         : unsigned(7 downto 0);
    signal sel             : unsigned(1 downto 0);
    signal sclr_n          : std_logic;
    signal clk_ena         : std_logic;
    signal state_out_uns   : unsigned(2 downto 0); -- FSM state output
    signal start_n         : std_logic;
    signal state_out_4bits : std_logic_vector(3 downto 0);
    signal reset_a         : std_logic;
    signal start           : std_logic;
    signal done_flag       : std_logic;
    signal segs            : unsigned(7 downto 0);
    signal product8x8_out  : unsigned(15 downto 0);
    signal dataa           : unsigned(7 downto 0);
    signal datab           : unsigned(7 downto 0);

begin

-- Instanciando o DUT
    dut : entity work.multiplicador8x8
        generic map(
            DATA_WIDTH => 16
        )
        port map(
            dataa          => dataa,
            datab          => datab,
            start          => SW(2),
            reset_a        => SW(1),
            clk            => SW(0),
            done_flag      => LEDR(0),
            product8x8_out => product8x8_out,
            segs           => segs
        );

  HEX0<=std_logic_vector(segs);
  
  
  
   seven_segment_cntrl_hex1 : entity work.seven_segment_cntrl
	  port map(
			input => product8x8_out(3 DOWNTO TO 0),
			segs  => HEX1
        );
		  
	seven_segment_cntrl_hex2 : entity work.seven_segment_cntrl
	  port map(
			input => product8x8_out(7 DOWNTO TO 4),
			segs  => HEX2
        );
		
	seven_segment_cntrl_hex3 : entity work.seven_segment_cntrl
	  port map(
			input => product8x8_out(11 DOWNTO TO 8),
			segs  => HEX3
        );
		
	seven_segment_cntrl_hex4 : entity work.seven_segment_cntrl
	  port map(
			input => product8x8_out(15 DOWNTO TO 12),
			segs  => HEX3
        );

end;

